// <auto-generated />
using System;
using CodeFirstGenerator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirstGenerator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250412080728_ManyToMany")]
    partial class ManyToMany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("CodeFirstGenerator.Entities.Configuration", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnumTypes")
                        .HasColumnType("TEXT");

                    b.Property<string>("SlnDir")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.EntityAttribute", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Arguments")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long>("EntityInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityInfoId");

                    b.ToTable("EntityAttributes");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.EntityInfo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Using")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EntityInfos");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.PropertyAttribute", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Arguments")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("PropertyInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PropertyInfoId");

                    b.ToTable("PropertyAttributes");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.PropertyInfo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DecimalDigits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("EntityInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReference")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Required")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityInfoId");

                    b.ToTable("PropertyInfos");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.Solutions", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Solutionss");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.Template", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RazorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TemplateType")
                        .HasMaxLength(500)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("SolutionsTemplate", b =>
                {
                    b.Property<long>("SolutionsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TemplatesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SolutionsId", "TemplatesId");

                    b.HasIndex("TemplatesId");

                    b.ToTable("SolutionsTemplate");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.EntityAttribute", b =>
                {
                    b.HasOne("CodeFirstGenerator.Entities.EntityInfo", "EntityInfo")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityInfo");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.PropertyAttribute", b =>
                {
                    b.HasOne("CodeFirstGenerator.Entities.PropertyInfo", "PropertyInfo")
                        .WithMany("Attributes")
                        .HasForeignKey("PropertyInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertyInfo");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.PropertyInfo", b =>
                {
                    b.HasOne("CodeFirstGenerator.Entities.EntityInfo", "EntityInfo")
                        .WithMany("Properties")
                        .HasForeignKey("EntityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityInfo");
                });

            modelBuilder.Entity("SolutionsTemplate", b =>
                {
                    b.HasOne("CodeFirstGenerator.Entities.Solutions", null)
                        .WithMany()
                        .HasForeignKey("SolutionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstGenerator.Entities.Template", null)
                        .WithMany()
                        .HasForeignKey("TemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.EntityInfo", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("CodeFirstGenerator.Entities.PropertyInfo", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
